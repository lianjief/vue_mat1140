(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{213:function(e,t,n){e.exports=n.p+"assets/img/function-mapping.26bb40ee.svg"},214:function(e,t,n){e.exports=n.p+"assets/img/vertical-line-test.b08c777b.svg"},215:function(e,t,n){e.exports=n.p+"assets/img/function-general-graph.3227c6e4.svg"},216:function(e,t,n){e.exports=n.p+"assets/img/function-injective-graph.86e02053.svg"},228:function(e,t,n){"use strict";n.r(t);var s=n(0),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),s("h2",{attrs:{id:"injective-surjective-and-bijective"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#injective-surjective-and-bijective"}},[e._v("#")]),e._v(" Injective, Surjective and Bijective")]),e._v(" "),s("p",[e._v('A function is a way of matching the members of a set "A" '),s("strong",[e._v("to")]),e._v(' a set "B":')]),e._v(" "),s("p",[s("img",{attrs:{src:n(213),alt:"function mapping"}})]),e._v(" "),s("ul",[s("li",[s("p",[e._v("A "),s("em",[s("strong",[e._v("General Function")])]),e._v(' points from each member of "A" to a member of "B".')]),e._v(" "),s("p",[e._v("It "),s("em",[s("strong",[e._v("never")])]),e._v(' has one "A" pointing to more than one "B", so '),s("em",[s("strong",[e._v("one-to-many")])]),e._v(' is not OK in a function (so something like "f(x) = 7 '),s("em",[s("strong",[e._v("or")])]),e._v(' 9" is not allowed)')]),e._v(" "),s("p",[e._v('But more than one "A" can point to the same "B" ('),s("em",[s("strong",[e._v("many-to-one is OK")])]),e._v(")")])]),e._v(" "),s("li",[s("p",[s("em",[s("strong",[e._v("Injective")])]),e._v(' means we won\'t have two or more "A"s pointing to the same "B".')]),e._v(" "),s("p",[e._v("So "),s("em",[s("strong",[e._v("many-to-one is NOT OK")])]),e._v(" (which is OK for a general function).")]),e._v(" "),s("p",[e._v("As it is also a function "),s("em",[s("strong",[e._v("one-to-many is not OK")])])]),e._v(" "),s("p",[e._v('But we can have a "B" without a matching "A"')]),e._v(" "),s("p",[e._v('Injective is also called "'),s("em",[s("strong",[e._v("One-to-One")])]),e._v('"')])]),e._v(" "),s("li",[s("p",[s("em",[s("strong",[e._v("Surjective")])]),e._v(' means that every "B" has '),s("em",[s("strong",[e._v("at least one")])]),e._v(' matching "A" (maybe more than one).')]),e._v(" "),s("p",[e._v('There won\'t be a "B" left out.')])]),e._v(" "),s("li",[s("p",[s("em",[s("strong",[e._v("Bijective")])]),e._v(" means both Injective and Surjective together.")]),e._v(" "),s("p",[e._v('So there is a perfect "'),s("em",[s("strong",[e._v("one-to-one correspondence")])]),e._v('" between the members of the sets.')]),e._v(" "),s("p",[e._v('(But don\'t get that confused with the term "One-to-One" used to mean injective).')])])]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("Bijective functions have an "),s("b",[s("i",[e._v("inverse")])]),e._v(" !")]),e._v(" "),s("p",[e._v('If every "A" goes to a unique "B", and every "B" has a matching "A" then we can go back and forwards without being led astray.')])]),e._v(" "),s("h2",{attrs:{id:"on-a-graph"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#on-a-graph"}},[e._v("#")]),e._v(" On A Graph")]),e._v(" "),s("p",[e._v("So let us see a few examples to understand what is going on.")]),e._v(" "),s("p",[e._v("When "),s("em",[s("strong",[e._v("A")])]),e._v(" and "),s("em",[s("strong",[e._v("B")])]),e._v(" are subsets of the Real Numbers we can graph the relationship.")]),e._v(" "),s("p",[e._v("Let us have "),s("em",[s("strong",[e._v("A")])]),e._v(" on the x axis and "),s("em",[s("strong",[e._v("B")])]),e._v(" on y, and look at our first example:")]),e._v(" "),s("p",[s("img",{attrs:{src:n(214),alt:"vertical-line-test"}})]),e._v(" "),s("p",[e._v("This is "),s("em",[s("strong",[e._v("not a function")])]),e._v(" because we have an "),s("em",[s("strong",[e._v("A")])]),e._v(" with many "),s("em",[s("strong",[e._v("B")])]),e._v(". It is like saying f(x) = 2 "),s("em",[s("strong",[e._v("or")])]),e._v(" 4")]),e._v(" "),s("p",[e._v('It fails the "Vertical Line Test" and so is not a function. But is still a valid relationship, so don\'t get angry with it.')]),e._v(" "),s("p",[e._v("Now, a general function can be like this:")]),e._v(" "),s("p",[s("img",{attrs:{src:n(215),alt:"function-general-graph"}}),e._v(" "),s("em",[e._v("A General Function")])]),e._v(" "),s("p",[e._v("It CAN (possibly) have a "),s("em",[s("strong",[e._v("B")])]),e._v(" with many "),s("em",[s("strong",[e._v("A")])]),e._v(". For example sine, cosine, etc are like that. Perfectly valid functions.")]),e._v(" "),s("p",[e._v('But an "'),s("em",[s("strong",[e._v("Injective Function")])]),e._v('" is stricter, and looks like this:')]),e._v(" "),s("p",[s("img",{attrs:{src:n(216),alt:"function-injective-graph"}}),e._v(" "),s("em",[e._v('"Injective" (one-to-one)')])]),e._v(" "),s("p",[e._v('In fact we can do a "Horizontal Line Test":')]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("To be "),s("i",[s("b",[e._v("Injective")])]),e._v(", a Horizontal Line should never intersect the curve at 2 or more points.")])]),e._v(" "),s("p",[e._v("So:")]),e._v(" "),s("ul",[s("li",[e._v("If it passes the vertical line test it is a function")]),e._v(" "),s("li",[e._v("If it also passes the horizontal line test it is an injective function")])])])}),[],!1,null,null,null);t.default=o.exports}}]);